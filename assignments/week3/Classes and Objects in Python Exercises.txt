Classes and Objects in Python Exercises:

Exercise 1: Create a Car class
Write a class Car that has the following attributes: make, model, and year. Also, define a method description() that returns a string describing the car (e.g., "2022 Toyota Camry").

Exercise 2: Encapsulation in a BankAccount class
Create a BankAccount class with attributes balance and account_number. Add methods to deposit and withdraw money, ensuring the balance cannot go negative. The balance attribute should be private.

Exercise 3: Inheritance Example with Employee and Manager
Create a base class Employee with attributes like name and salary. Then, create a derived class Manager that adds an attribute for department and overrides the get_salary() method to include a bonus.

Exercise 4: Polymorphism in Animal class
Create a base class Animal with a method speak(). Then, create two derived classes Dog and Cat, each overriding the speak() method. Demonstrate polymorphism by creating a function make_sound() that takes an Animal object and calls the speak() method.

Exercise 5: Method Overriding with Shape class
Create a base class Shape with a method area(). Then, create derived classes Circle and Rectangle, each implementing the area() method differently. Use method overriding.

Exercise 6: Create a Student class with __str__() method
Create a class Student that contains attributes name, age, and marks. Override the __str__() method to provide a custom string representation for the object.

Exercise 7: Abstract Class Example
Create an abstract class Shape with an abstract method area(). Then, create subclasses Circle and Rectangle that implement the area() method. Ensure that Shape cannot be instantiated directly.

Exercise 8: Implement a Person class with a greet() method
Create a Person class with a greet() method that prints a greeting message using the person's name.

Exercise 9: Create a class with a __add__() method to add two objects
Create a class Point with two attributes x and y. Define the __add__() method to add two Point objects. When two points are added, return a new Point object with the sum of the coordinates.

Exercise 10: Multi-level Inheritance Example
Create a base class Person with a name and age attribute. Create a Student class that inherits from Person and adds an attribute student_id. Then, create a GraduateStudent class that inherits from Student and adds an attribute thesis_topic.
